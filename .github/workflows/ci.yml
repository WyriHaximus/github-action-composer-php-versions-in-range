name: Continuous Integration
on:
  push:
    branches:
      - 'main'
  pull_request:
jobs:
  get-supported-php-versions:
    name: Test Composer PHP versions in range Tag on ${{ matrix.os }} in ${{ matrix.workingDirectory }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - workingDirectory: "situations/another-working-directory/"
            highestUpcoming: "5.6"
            nightly: "5.6"
            highest: "5.6"
            lowest: "5.3"
            extensions: "ast,pcov,xdebug"
            requiredExtensions: "ast"
            requiredDevExtensions: "pcov,xdebug"
            os: ubuntu-latest
          - workingDirectory: "situations/another-working-directory"
            highestUpcoming: "5.6"
            nightly: "5.6"
            highest: "5.6"
            lowest: "5.3"
            extensions: "ast,pcov,xdebug"
            requiredExtensions: "ast"
            requiredDevExtensions: "pcov,xdebug"
            os: ubuntu-latest
          - workingDirectory: "situations/ext-parallel-composer.lock/"
            highestUpcoming: ""
            nightly: ""
            highest: "8.4"
            lowest: "8.2"
            extensions: "parallel,pcov,xdebug"
            requiredExtensions: "parallel"
            requiredDevExtensions: "pcov,xdebug"
            os: ubuntu-latest
          - workingDirectory: "situations/wyrihaximus-test-utilities-composer.lock/"
            highestUpcoming: ""
            nightly: ""
            highest: "8.4"
            lowest: "8.2"
            extensions: "bcmath,ctype,dom,filter,intl,json,libxml,mbstring,openssl,pcov,pcre,phar,reflection,simplexml,sodium,spl,tokenizer,xdebug,xml,xmlwriter"
            requiredExtensions: "bcmath,ctype,dom,filter,intl,json,libxml,mbstring,openssl,pcre,phar,reflection,simplexml,sodium,spl,tokenizer,xml,xmlwriter"
            requiredDevExtensions: "pcov,xdebug"
            os: ubuntu-latest
          - workingDirectory: "situations/wyrihaximus-react-phpunit-run-tests-in-fiber-composer.lock/"
            highestUpcoming: ""
            nightly: ""
            highest: "8.4"
            lowest: "8.2"
            extensions: "bcmath,ctype,dom,filter,intl,json,libxml,mbstring,openssl,pcre,phar,reflection,simplexml,sodium,spl,tokenizer,xml,xmlwriter"
            requiredExtensions: ""
            requiredDevExtensions: "bcmath,ctype,dom,filter,intl,json,libxml,mbstring,openssl,pcre,phar,reflection,simplexml,sodium,spl,tokenizer,xml,xmlwriter"
            os: ubuntu-latest
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest
        workingDirectory:
          - ""
        highestUpcoming:
          - ""
        nightly:
          - ""
        highest:
          - "8.4"
        lowest:
          - "7.3"
        extensions:
          - "ast,pcov,xdebug"
        requiredExtensions:
          - "ast"
        requiredDevExtensions:
          - "pcov,xdebug"
    outputs:
      highest: ${{ steps.versionsinrange.outputs.highest }}
      extensions: ${{ steps.versionsinrange.outputs.extensions }}
      requiredExtensions: ${{ steps.versionsinrange.outputs.requiredExtensions }}
      requiredDevExtensions: ${{ steps.versionsinrange.outputs.requiredDevExtensions }}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - name: 'Composer PHP versions in range'
        id: versionsinrange
        uses: ./
        with:
          workingDirectory: ${{ matrix.workingDirectory }}
      - run: |
          echo "${{ steps.versionsinrange.outputs.version }}"
      - name: 'Composer PHP versions in range including upcoming releases'
        id: versionsinrangeincludingupcomingreleases
        uses: ./
        with:
          upcomingReleases: true
          workingDirectory: ${{ matrix.workingDirectory }}
      - run: |
          echo "${{ steps.versionsinrange.outputs.version }}"
      - name: 'Composer PHP versions in range including nightly'
        id: versionsinrangeincludingnightly
        uses: ./
        with:
          nightly: true
          workingDirectory: ${{ matrix.workingDirectory }}
      - run: |
          echo "${{ steps.versionsinrangeincludingnightly.outputs.version }}"
      - name: 'Composer PHP versions in range including nightly and  upcoming releases'
        id: versionsinrangeincludingnightlyandupcomingreleases
        uses: ./
        with:
          upcomingReleases: true
          nightly: true
          workingDirectory: ${{ matrix.workingDirectory }}
      - run: |
          echo "${{ steps.versionsinrangeincludingnightlyandupcomingreleases.outputs.version }}"
      - name: "Assert Output: lowest"
        uses: nick-fields/assert-action@v1
        with:
          expected: ${{ matrix.lowest }}
          actual: ${{ steps.versionsinrange.outputs.lowest }}
      - name: "Assert Output: highest"
        uses: nick-fields/assert-action@v1
        with:
          expected: ${{ matrix.highest }}
          actual: ${{ steps.versionsinrange.outputs.highest }}
      - name: "Assert Output: highest (upcoming releases)"
        uses: nick-fields/assert-action@v1
        with:
          expected: ${{ matrix.highestUpcoming }}
          actual: ${{ steps.versionsinrangeincludingupcomingreleases.outputs.highest }}
      - name: "Assert Output: highest (nightly)"
        uses: nick-fields/assert-action@v1
        with:
          expected: ${{ matrix.nightly }}
          actual: ${{ steps.versionsinrangeincludingnightly.outputs.highest }}
      - name: "Assert Output: extensions"
        uses: nick-fields/assert-action@v1
        with:
          expected: ${{ matrix.extensions }}
          actual: ${{ join(fromJson(steps.versionsinrange.outputs.extensions), ',') }}
      - name: "Assert Output: requiredExtensions"
        uses: nick-fields/assert-action@v1
        with:
          expected: ${{ matrix.requiredExtensions }}
          actual: ${{ join(fromJson(steps.versionsinrange.outputs.requiredExtensions), ',') }}
      - name: "Assert Output: requiredDevExtensions"
        uses: nick-fields/assert-action@v1
        with:
          expected: ${{ matrix.requiredDevExtensions }}
          actual: ${{ join(fromJson(steps.versionsinrange.outputs.requiredDevExtensions), ',') }}
  extensions:
    name: Detected extensions on ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest
    needs:
      - get-supported-php-versions
    runs-on: ${{ matrix.os }}
    steps:
      - run: |
          echo "All require extensions: ${{ needs.get-supported-php-versions.outputs.extensions }}"
          echo "Require extensions: ${{ needs.get-supported-php-versions.outputs.requiredExtensions }}"
          echo "Dev require extensions: ${{ needs.get-supported-php-versions.outputs.requiredDevExtensions }}"
      - uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ needs.get-supported-php-versions.outputs.highest }}
          tools: composer
          coverage: none
          extensions: ${{ join(fromJson(needs.get-supported-php-versions.outputs.extensions), ',') }}
